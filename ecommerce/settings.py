"""
Django settings for ecommerce project.

Generated by 'django-admin startproject' using Django 4.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
#Importo la herramienta que instalé de python
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#Esto lo modifiqué, ahora lee el secret key en el archivo .env
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
#Esto también lo movi al .env
#El config por defecto envia valores string desde el env, por eso en ciertos aspectos
#Hay que modificarlo, en este caso le asigno que sea de tipo boolean para debug, es obligatorio
#El default también es obligatorio o no funcionará
DEBUG = config('DEBUG', cast=bool, default=True)

#Esto es el CNAME, al crear ecommerce con el eb con el tema de amazon
ALLOWED_HOSTS = ['https://www.ecommerce-env.eba-wnzgnmi3.us-west-2.elasticbeanstalk.com/']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts',
    'category',
    'store',
    'carts',
    'orders',
    'admin_honeypot',
]

#Aqui instaló la app instalada llamada session, para cerrar sesion cuando está inactivo
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_session_timeout.middleware.SessionTimeoutMiddleware'
]

#Cuantos segundos tomará para cerrar sesion estando inactivo, en este caso, 1 hora
SESSION_EXPIRE_SECONDS = 3600
#Esto es para que se el contador se active después de la ultima actividad
SESSION_EXPIRE_AFTER_LAST_ACTIVITY = True
#Aqui redireccionará cuando finalize el contador
SESSION_TIMEOUT_REDIRECT = 'accounts/login'

ROOT_URLCONF = 'ecommerce.urls'
#-------------------------------------------------------------------------------------------------aqui agrego la carpeta templates en DIRS
#registro context_processors para hacer publico la funcion de menu_links para todos los templates
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'category.context_processors.menu_links',
                'carts.context_processors.counter',
            ],
        },
    },
]

WSGI_APPLICATION = 'ecommerce.wsgi.application'

AUTH_USER_MODEL = 'accounts.Account'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR/'static'
STATICFILES_DIRS =[
    'ecommerce/static'
]

MEDIA_URL ='/media/'
MEDIA_ROOT = BASE_DIR /'media'


#Esto hace que los mensajes de error incorporen los estilos de bootstrap, en este caso el estilo de danger para todas las paginas
from django.contrib.messages import constants as messages
MESSAGE_TAGS = {
    messages.ERROR:'danger'
}

#El email del proyecto, donde se enviar los correos a los clientes por defecto
#EMAIL_HOST = 'smtp.gmail.com'
#EMAIL_PORT = 587
#EMAIL_HOST_USER = 'franciscovaras100@gmail.com'
#EMAIL_HOST_PASSWORD = 'xevnaeevyapksdkb'
#EMAIL_USE_TLS = True

#Aqui también lo cambie para que los datos se envien desde .env
EMAIL_HOST = config('EMAIL_HOST')
EMAIL_PORT = config('EMAIL_PORT', cast=int)
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')
EMAIL_USE_TLS = config('EMAIL_USE_TLS', cast=bool)

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
